c
p one_timeline
c
render_to_string partial: 'timelines/timeline', layout: false, formats: :html, locals: { t: timeline, like_count: 0 }
p @like_counts[timeline.id].nil?
p @like_counts
p timeline.id
@ timeline.id
p @like_counts[timeline.id]
p @like_counts
continue
p format
c
n
next
continue
quit
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).nil?
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).size()
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).size
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).length
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).length()
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id) > 0
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id) != 0
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id)>0
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id)
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).length
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id).size()
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user.id)
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: 2)
Like.select('user_id').where(timeline_id: timeline.id).find_by(user_id: current_user)
Like.select('user_id').where(timeline_id: timeline.id).select_by(user_id: current_user)
Like.select('user_id').where(timeline_id: timeline.id).("user_id")
Like.select('user_id').where(timeline_id: timeline.id)("user_id")
Like.select('user_id').where(timeline_id: timeline.id)["user_id"]
Like.select('user_id').where(timeline_id: timeline.id)
Like.select('user_id').where(timeline_id: timeline.id).include(current_user)
Like.select('user_id').where(timeline_id: timeline.id)
Like.where(timeline_id: timeline.id)
Like.where(timeline_id: timeline.id).
Like.find_by("user_id").where(timeline_id: timeline.id).
Like.where(timeline_id: timeline.id)
Like.where(timeline_id: timeline.id)["user_id"]
Like.where(timeline_id: timeline.id).user_id
Like.where(timeline_id: timeline.id)
continue
finish
next
help
n
 @like_counts[timeline.id].nil?
timeline.id
@like_counts
@like_counts[timeline.id]
quit
like_counts
like_count
@like_counts
quit
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
count_like
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
Like.where(timeline_id: @timeline_id).count
Like.where(timeline_id: @timeline_id)
count_like
quit
Like.find_by(timeline_id: 64)
Like.all
Like.find_by(timeline_id: 60)
Like.find_by(timeline_id: 62)
Like.find_by(timeline_id: @timeline_id)
Like.find_by(timeline_id: @timeline_id).length
Like.find_by(timeline_id: @timeline_id).count
Like.find_by(timeline_id: @timeline_id).size
Like.find_by(timeline_id: @timeline_id).group('timeline_id').count
Like.find_by(timeline_id: @timeline_id)
Like.find_by(timeline_id: @timeline_id).length
Like.find_by(timeline_id: @timeline_id).size
Like.find_by(timeline_id: @timeline_id).count
Like.find_by(timeline_id: @timeline_id)
 render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
y
Like.find_byquit
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
y
quit
count_like
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
Like.find_by(timeline_id: 60)
Like.find(1)
Like.find(0)
Like.all
Like.find(params[timeline_id: 60])
Like.find(params[timeline_id: :60])
Like.find(params[timeline_id: 60])
Like.find(timeline_id: 60)
Like.find(60)
Like.find(@timeline_id)
Like.find(60).count==nil
count_likes
Like.find(@timeline_id).count==nil
count = Like.find(@timeline_id).count
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
Like.find(@timeline_id).count
count_like
render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
 render_to_string partial: 'likes/like', layout: false, formats: :html, locales: {like_counts: count_like}
quit
html = render_to_string partial: 'likes/like', layout: false, formtas: :html, locales: {like_counts: count_like}
p count_like
html = render_to_string partial: 'likes/like', layout: false, formtas: :html, locales: {like_counts: count_like}
quit
p html
qui
next
help
quit
n
quit
render_to_string partial: 'likes/like', layout: false, formtas: :html, locales: {like_counts: like_counts}
count_like
quit
n
like_counts
render_to_string partial: 'likes/like', layout: false, formtas: :html, locales: {like_counts: like_counts}
quit
p like_counts
render_to_string partial: 'likes/like', layout: false, formtas: :html
quit
help
i
a
d
n
likes.group('timeline_id').count
count(likes.group('timeline_id'))
likes
likes.group('timeline_id').length
likes.group('timeline_id')
likes
lies
like
c
count_like
c
s
p params(timeline_id)
p params["timeline_id"]
p params.timeline_id
p like_params["timeline_id"]
p like_params["timeline_id"][0]
p like_params["timeline_id"](0)
p like_params["timeline_id"]
p like_params(0)
p like_params[0]
p like_params
p timeline_id
p like_params(params[:timeline_id])
p like_params
p like_params.timeline_id
like_params.timeline_id
continue
p Like.new(user_id: like_by.id, timeline_id: timeline.id)
 p like
p timeline_id
p timeline.id
p timeline
p like_by
p like
c
n
p p
n
s
p params
p params[:id]
